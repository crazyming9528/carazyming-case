{"version":3,"sources":["serviceWorker.js","pages/main.js","pages/home/index.js","pages/goods/list.js","pages/auth/user-center.js","pages/about/index.js","pages/auth/login.js","pages/sys/not-found.js","router/index.js","index.js"],"names":["Boolean","window","location","hostname","match","Main","className","to","id","this","props","children","React","Component","withRouter","Home","List","UserCenter","About","Login","history","push","alert","htmlFor","type","value","placeholder","onClick","jump","register","NotFound","R","basename","path","component","render","exact","from","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,uDCfCC,G,uLAIC,OACI,yBAAKC,UAAU,gBACX,yBAAKA,UAAU,QACX,6DACA,kBAAC,IAAD,CAAMC,GAAG,KAAT,gBACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,4BACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,gBACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,4BACA,kBAAC,IAAD,CAAMA,GAAG,UAAT,iBAEJ,yBAAKC,GAAG,QACHC,KAAKC,MAAMC,e,GAfZC,IAAMC,YAuBXC,cAAWT,GCxBLU,E,iLAIb,OACI,6BACI,yE,GANkBH,IAAMC,WCCnBG,E,iLAIb,OACI,6BACI,qF,GANkBJ,IAAMC,WCAnBI,E,iLAEb,OACI,6BACI,qF,GAJwBL,IAAMC,WCAzBK,E,iLAIb,OACI,6BACI,qF,GANmBN,IAAMC,WCApBM,G,qLAGbV,KAAKC,MAAMU,QAAQC,KAAK,O,iCAIxBpB,OAAOqB,MAAM,0C,+BAGP,IAAD,OACL,OACI,yBAAKhB,UAAU,iBACX,yBAAKA,UAAU,SAAQ,gFACnB,yBAAKA,UAAU,QAEX,2BAAOiB,QAAQ,WAAf,sBAAoC,2BAAOf,GAAG,UAAUgB,KAAK,OAAOC,MAAM,OAC/BC,YAAY,uBACvD,2BAAOH,QAAQ,YAAf,sBAAqC,2BAAOf,GAAG,WAAWgB,KAAK,WAAWC,MAAM,OACpCC,YAAY,iBACxD,yBAAKpB,UAAU,gBACX,4BAAQqB,QAAS,WACb,EAAKC,SADT,gBAIA,4BAAQD,QAAS,WACb,EAAKE,aADT,wB,GAzBOjB,IAAMC,YCDpBiB,E,iLAIb,OACI,yBAAKxB,UAAU,cACX,iG,GANsBM,IAAMC,WC+B7BkB,EAnBL,kBACN,kBAAC,IAAD,CAAiBC,SAAS,UACtB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,SAASC,UAAWf,IAChC,kBAAC,IAAD,CAAOc,KAAK,aAAaC,UAAWJ,IACpC,kBAAC,IAAD,CAAOG,KAAK,IAAIE,OAAQ,kBACpB,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACH,KAAK,IAAIC,UAAWnB,IACjC,kBAAC,IAAD,CAAOqB,OAAK,EAACH,KAAK,QAAQC,UAAWlB,IACrC,kBAAC,IAAD,CAAOoB,OAAK,EAACH,KAAK,SAASC,UAAWhB,IACtC,kBAAC,IAAD,CAAOkB,OAAK,EAACH,KAAK,eAAeC,UAAWjB,QAIpD,kBAAC,IAAD,CAAUoB,KAAK,KAAK9B,GAAG,kBCrBnC+B,IAASH,OAAO,kBAAC,EAAD,MAAWI,SAASC,eAAe,ST4H7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.60186f44.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport '../style/main.scss';\r\nimport {withRouter,Link} from 'react-router-dom'\r\n class Main extends React.Component{\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main_wrapper\">\r\n                <div className=\"menu\">\r\n                    <h1>react-router-dom 实践</h1>\r\n                    <Link to=\"/\">首页</Link>\r\n                    <Link to=\"/list\">商品列表</Link>\r\n                    <Link to=\"/about\">关于</Link>\r\n                    <Link to=\"/user-center\">个人中心</Link>\r\n                    <Link to=\"/login\">登录</Link>\r\n                </div>\r\n                <div id=\"body\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(Main)\r\n","import React from 'react';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>欢迎来到首页</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nexport default class List extends React.Component{\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>欢迎来到商品列表</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nexport default class UserCenter extends React.Component{\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>欢迎来到个人中心</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","\r\nimport React from \"react\";\r\n\r\nexport default class About extends React.Component{\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>欢迎来到关于我们</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport '../../style/login.scss';\r\n\r\nexport default class Login extends React.Component {\r\n\r\n    jump() {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    register() {\r\n        window.alert(\"暂无注册功能\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"login_wrapper\">\r\n                <div className=\"block\"><h3>欢迎来到登录界面</h3>\r\n                    <div className=\"form\">\r\n\r\n                        <label htmlFor=\"account\">账号：</label><input id=\"account\" type=\"text\" value=\"demo\"\r\n                                                                   placeholder=\"用户名\"/>\r\n                        <label htmlFor=\"password\">密码：</label><input id=\"password\" type=\"password\" value=\"demo\"\r\n                                                                    placeholder=\"密码\"/>\r\n                        <div className=\"button_group\">\r\n                            <button onClick={() => {\r\n                                this.jump();\r\n                            }}>登录\r\n                            </button>\r\n                            <button onClick={() => {\r\n                                this.register();\r\n                            }}>注册\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\n\r\nexport default class NotFound extends React.Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"error_page\">\r\n                <h3>404 - 未找到你请求的页面</h3>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n","import React from 'react'\r\n\r\nimport {BrowserRouter , Redirect, Route, Switch} from 'react-router-dom';\r\n\r\n\r\nimport Main from \"../pages/main\"; //主界面\r\nimport Home from \"../pages/home\"; //首页页面\r\nimport List from \"../pages/goods/list\"; //商品列表页\r\nimport UserCenter from '../pages/auth/user-center' //用户中心界面\r\nimport About from \"../pages/about\"; //关于页面\r\nimport Login from '../pages/auth/login' //登录页面\r\nimport NotFound from '../pages/sys/not-found' //404 错误提示页\r\n\r\n\r\nconst R = () => (\r\n    <BrowserRouter   basename=\"/react\">\r\n        <Switch>\r\n            <Route path=\"/login\" component={Login}/>\r\n            <Route path=\"/not-found\" component={NotFound}/>\r\n            <Route path=\"/\" render={() =>\r\n                <Main>\r\n                    <Route exact path=\"/\" component={Home}/>\r\n                    <Route exact path=\"/list\" component={List}/>\r\n                    <Route exact path=\"/about\" component={About}/>\r\n                    <Route exact path=\"/user-center\" component={UserCenter}/>\r\n                </Main>\r\n            }/>\r\n\r\n            <Redirect from=\"/*\" to='/not-found'/>\r\n        </Switch>\r\n    </BrowserRouter >\r\n);\r\n\r\nexport default R;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Router from './router/index';\n\n\nReactDOM.render(<Router/>, document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}